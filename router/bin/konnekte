#! /usr/bin/haserl
Content-type: text/plain
<?

PROTOVERSION=1
CONFIGDIR=../etc
LOGDIR=../var
STATEDIR=/tmp
CONNECTIONSFILE=$CONFIGDIR/connections
CONNECTIONFILE=$STATEDIR/konnekte-connection
HOLDERSFILE=$STATEDIR/konnekte-holders
STARTTIMEFILE=$STATEDIR/konnekte-connstarttime
AUTHFILE=$CONFIGDIR/credentials
LOGFILE=$LOGDIR/log

verify_auth()
{
  while read NAME PASSWORD; do
    MD5=$(echo -n "$NAME:$PASSWORD" | md5sum | cut -f1 -d" ")
    if test "$FORM_auth" = "$MD5"; then
      return 0
    fi
  done
  return 1
}

auth_failed()
{
  echo "X-Konnekte-Status: 403 Forbidden"
  echo
  exit 0
}

failed()
{
  echo "X-Konnekte-Status: 500 Server Error"
  echo
  exit 0
}

ok()
{
  echo "X-Konnekte-Status: 200 OK"
  echo
  exit 0
}

is_connected()
{
  #cat /proc/net/dev/ | grep ppp > /dev/null
  test -f $CONNECTIONFILE
}

phys_connect()
{
  echo $FORM_connection > $CONNECTIONFILE
  date +%s > $STARTTIMEFILE
}

phys_disconnect()
{
  rm $CONNECTIONFILE
  rm $HOLDERSFILE
  rm $STARTTIMEFILE
}

connect()
{
  echo $FORM_station >> $HOLDERSFILE
  if ! is_connected; then
    phys_connect
  fi
}

disconnect()
{ 
  grep -v $FORM_station $HOLDERSFILE >> $HOLDERSFILE-$$
  mv $HOLDERSFILE-$$ $HOLDERSFILE
  if test "`wc -c $HOLDERSFILE|cut -f1 -d' '`" = "0"; then
    phys_disconnect
  fi
}

force_disconnect()
{
  phys_disconnect
}

case "$FORM_mode" in
  hello )
    echo
    echo -n "olleh konnekte"
    ;;
  state )
    verify_auth<$AUTHFILE || auth_failed
    echo
    if is_connected; then
      echo "state: connected"
      echo "connection: `cat $CONNECTIONFILE`"
      echo "holders: `cat $HOLDERSFILE`"
      echo "start: `cat $STARTTIMEFILE`"
      echo "now: `date +%s`"
    else
      echo "state: disconnected"
    fi
    ;;
  connections )
    verify_auth<$AUTHFILE || auth_failed
    echo
    cat $CONNECTIONSFILE
    ;;
  connections )
    verify_auth<$AUTHFILE || auth_failed
    echo
    cat $LOGFILE
    ;;
  connect )
    verify_auth<$AUTHFILE || auth_failed
    connect || failed
    ok
    ;;
  disconnect )
    verify_auth<$AUTHFILE || auth_failed
    disconnect || failed
    ok
    ;;
  force_disconnect )
    verify_auth<$AUTHFILE || auth_failed
    force_disconnect || failed
    ok
    ;;
  version )
    verify_auth<$AUTHFILE || auth_failed
    echo
    echo 1
    ;;
  * )
    echo "X-Konnekte-Status: 400 Bad Request"
    echo
    ;;
esac
?>
